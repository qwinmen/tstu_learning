<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>