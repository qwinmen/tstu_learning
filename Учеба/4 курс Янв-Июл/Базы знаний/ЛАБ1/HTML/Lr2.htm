<HTML>
<HEAD>
<TITLE>Лабораторная работа №2</TITLE>
</HEAD>
<B><FONT FACE="Times New Roman"><P>Лабораторная работа №2</P>
</B><P ALIGN="CENTER">РАЗРАБОТКА ЭКСПЕРТНОЙ СИСТЕМЫ, </P>
<P ALIGN="CENTER">РЕАЛИЗУЮЩЕЙ ОБРАТНУЮ ЦЕПОЧКУ РАССУЖДЕНИЙ.</P>
<B><P>Цель</B>: Практическое ознакомление с обратным алгоритмом вывода</P>
<B><P>Задания:</P>
</B><P>1. Реализовать алгоритм и базу знаний на ЭВМ. </P>
<P>2. Проверить работу экспертной системы на конкретном примере.</P>
<B><P ALIGN="CENTER">Методика выполнения работы</P>
</B><P>В отличие от алгоритма, рассмотренного в предыдущей лабораторной работе, при обратной цепочке рассуждений система ведет работу от гипотез и результатов к фактам и входной информации. Выдвинутая гипотеза проверяется на основе правил базы знаний. В случае, если входной информации недостаточно для подтверждения гипотезы, происходит обращение к пользователю .</P>
<P>Работу алгоритма обратной цепочки рассуждений рассмотрим на основе примера, приведенного в предыдущей лабораторной работе - на основе фрагмента базы знаний проектирования гальванического оборудования. Набор фактов и правил, в данном случае, остается без изменений.</P>
<P>Как и в прямом алгоритме, введем ряд вспомогательных таблиц, необходимых для работы алгоритма:</P>
<P>1. Список переменных условия </FONT><A HREF="Tab/Tab1.htm"><B><FONT FACE="Times New Roman">(табл. 1);</B></FONT></A></P>
<FONT FACE="Times New Roman"><P>2. Расширенный список переменных условия </FONT><A HREF="Tab/Tab2.htm"><B><FONT FACE="Times New Roman">(табл. 2)</B></FONT></A><FONT FACE="Times New Roman"> Построение этих таблиц рассмотрено в </FONT><A HREF="Lr1.htm#таб1"><B><FONT FACE="Times New Roman">лабораторной работе № 1.</B></FONT></A></P>
<FONT FACE="Times New Roman"><P>3. Список логических выводов <A NAME="таб15"></FONT><A HREF="Tab/Tab15.htm"><B><FONT FACE="Times New Roman">(табл. 15)</B></FONT></A> </A><FONT FACE="Times New Roman">В список заносятся последовательно номера<B> всех</B> правил базы</P>
<P>знаний и имена переменных, расположенных в части "То" соответствующих правил.</P>
<P>4 Стек логических выводов (табл. 16)</P>
<P>Таблица 16 Стек логических выводов</P></FONT>
<TABLE BORDER CELLSPACING=1 CELLPADDING=7 WIDTH=260>
<TR><TD WIDTH="47%" VALIGN="TOP" HEIGHT=26>
<P><FONT FACE="Times New Roman">Номер правила</FONT></TD>
<TD WIDTH="53%" VALIGN="TOP" HEIGHT=26>
<FONT FACE="Times New Roman"><P>Номер условия</FONT></TD>
</TR>
</TABLE>
<FONT FACE="Times New Roman"><P>Пусть теперь системе требуется найти ответ на вопрос.</P></FONT>
<TABLE BORDER CELLSPACING=1 CELLPADDING=7 WIDTH=530>
<TR><TD VALIGN="TOP" HEIGHT=35>
<P><FONT FACE="Times New Roman">Какой материал необходим для изготовления защитной i футеровки проектируемой ванны ?</FONT></TD>
</TR>
</TABLE>
<FONT FACE="Times New Roman"><P>Алгоритм ответа на вопрос будет включать в себя следующие шаги:</P>
<P>1. Определяем переменную, значение которой должно быть найдено. В нашем примере это "Материал футеровки".</P>
<P>2. Находим переменную "Материал футеровки" в списке логических выводов. В стек логических выводов заносим номера правила и условия, содержащие вывод по материалу. Данный шаг алгоритма рассуждений допускает некоторые модификации:</P>
<P>а) 3 стек заносятся в обратном порядке номера всех правил, содержащих в части "То" искомую переменную:</P>
<P>Таблица 17</FONT> <FONT FACE="Times New Roman">Стек логических выводов после первого обращения к базе знаний</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=1 CELLPADDING=7 WIDTH=217>
<TR><TD WIDTH="47%" VALIGN="TOP" HEIGHT=27>
<P ALIGN="CENTER">6</TD>
<TD WIDTH="53%" VALIGN="TOP" HEIGHT=27>
<P ALIGN="CENTER">1</TD>
</TR>
<TR><TD WIDTH="47%" VALIGN="TOP" HEIGHT=27>
<P ALIGN="CENTER">7</TD>
<TD WIDTH="53%" VALIGN="TOP" HEIGHT=27>
<P ALIGN="CENTER">1</TD>
</TR>
</TABLE>
</CENTER></P>
<FONT FACE="Times New Roman"><P ALIGN="CENTER">Дно стека</P>
<P>Затем выбираем из стека верхнее правило и начинаем его обработку. Если правило доказать не удалось, из стека выбираем следующее правило и т.д. В дальнейшем будем использовать данную модификацию алгоритма.</P>
<P>б) В стек заносится номер первого найденного правила, а на соответствующую строку в списке логических выводов установим указатель. Если правило недоказуемо, повторяем поиск в базе знаний, начиная его с текущей позиции указателя:</P>
<P ALIGN="CENTER">Таблица 18 Стек и список логических выводов после первого</P>
<P ALIGN="CENTER">обращения к базе знаний</P>
<P>Стек</P></FONT>
<TABLE BORDER CELLSPACING=1 CELLPADDING=7 WIDTH=178>
<TR><TD WIDTH="49%" VALIGN="TOP" HEIGHT=33>
<P><B>6</B></TD>
<TD WIDTH="51%" VALIGN="TOP" HEIGHT=33>
<B><P>1</B></TD>
</TR>
</TABLE>
<FONT FACE="Times New Roman"><P>Список</P></FONT>
<TABLE BORDER CELLSPACING=1 CELLPADDING=7 WIDTH=307>
<TR><TD WIDTH="44%" VALIGN="TOP" HEIGHT=25>
<P><B><FONT FACE="Times New Roman">№ Правила</B></FONT></TD>
<TD WIDTH="56%" VALIGN="TOP" HEIGHT=25>
<B><FONT FACE="Times New Roman"><P>Переменная</B></FONT></TD>
</TR>
<TR><TD WIDTH="44%" VALIGN="TOP" HEIGHT=31>
<P>6</TD>
<TD WIDTH="56%" VALIGN="TOP" HEIGHT=31>
<FONT FACE="Times New Roman"><P>Материал футеровки</FONT></TD>
</TR>
</TABLE>

<FONT FACE="Times New Roman"><P>После этого система приступает к рассмотрению найденного правила. Из списка переменных условия определяем, что переменными условия в правиле 6 являются "Футеровка" и "Среда". Выбираем первую переменную - "Футеровка". из расширенного списка переменных условия определяем, что переменная не была проинициализирована. Переменная "Футеровка" есть в списке логических выводов (правило 5). В этом случае система помещает номер правила в стек логических выводов <A NAME="таб19"></FONT><A HREF="Tab/Tab19.htm"><B><FONT FACE="Times New Roman">(табл. 19).</B></FONT></A></A></P>
<FONT FACE="Times New Roman"><P>3. В правиле 5, через список переменных условия, система определяет переменную условия "Среда" и через расширенный список переменных условия проверяет, имеет ли она какое-либо значение. В данном примере, переменная "Среда" не проинициализирована, но в то же время она содержится в списке логических выводов (правило 1). Заносим в стек логических выводов информацию по найденному правилу <A NAME="таб20"></FONT><A HREF="Tab/Tab20.htm"><B><FONT FACE="Times New Roman">(табл. 20).</B></FONT></A></A></P>
<FONT FACE="Times New Roman"><P>4. Через список переменных условия определяем, что для первого правила переменными условия являются "Среда" и "Концентрация" . Выбираем первую переменную - "Среда". Из расширенного списка видно, что она не проинициализирована, но в то же время она содержится в другой строке списка логических выводов (правило 2). Информация по найденному правилу заносится в стек логических выводов <A NAME="таб21"></FONT><A HREF="Tab/Tab21.htm"><B><FONT FACE="Times New Roman">(табл. 21).</B></FONT></A></P>
<P></A></P>
<FONT FACE="Times New Roman"><P>Первой переменной условия правила 2 является переменная "Среда", Она не проинициализирована и в списке логических выводов нет больше строк, содержащих<B> ее</B>. Система должна задать вопрос о конкретном значении этой переменной. Предположим, что на вопрос системы был дан ответ "сернистая кислота". После этого в расширенном списке переменных условия появляется следующая информация:</P>
<P>Таблица 22 Изменения в расширенном списке (шаг 4)</P></FONT>
<TABLE BORDER CELLSPACING=1 CELLPADDING=7 WIDTH=504>
<TR><TD WIDTH="24%" VALIGN="TOP" HEIGHT=20>
<P><FONT FACE="Times New Roman">Среда</FONT></TD>
<TD WIDTH="38%" VALIGN="TOP" HEIGHT=20>
<FONT FACE="Times New Roman"><P>Определена</FONT></TD>
<TD WIDTH="38%" VALIGN="TOP" HEIGHT=20>
<FONT FACE="Times New Roman"><P>Сернистая кислота</FONT></TD>
</TR>
</TABLE>
<FONT FACE="Times New Roman"><P>5. Далее система проверяет значение переменной "Среда" в условной части правила и в расширенном списке переменных условия Эти значения не совпадают. О причине несовпадения можно узнать из анализа фактов базы знаний. В нашем примере база знаний содержит факт:</P>
<P>Сернистая кислота = кислота.</P>
<P>Следовательно, первое условие правила 2 можно считать выполненным. Если же подобного факта найти не удается, условие и все правило считается невыполненным.</P>
<P>6.В стеке логических выводов для правила 2 меняется указатель условия (табл. 23).</P>
<P>Таблица 23</FONT> <FONT FACE="Times New Roman">Изменения в стеке логических выводов</P></FONT>
<TABLE BORDER CELLSPACING=1 CELLPADDING=7 WIDTH=170>
<TR><TD WIDTH="51%" VALIGN="TOP" HEIGHT=22>
<P ALIGN="CENTER">2</TD>
<TD WIDTH="49%" VALIGN="TOP" HEIGHT=22>
<P ALIGN="CENTER">2</TD>
</TR>
</TABLE>
<FONT FACE="Times New Roman"><P>В этом случае система приступает к анализу второго условия правила 2. Анализ этого условия приводит к необходимости запросить пользователя о значении переменной "Концентрация". Предположим, что на запрос был получен ответ:</P>
<P>Концентрация = более 70%</P>
<P>При этом в расширенном списке переменных условия изменяется значение переменной "Концентрация":</P>
<P>Таблица 24 Изменения в расширенном списке (шаг 6)</P></FONT>
<TABLE BORDER CELLSPACING=1 CELLPADDING=7 WIDTH=453>
<TR><TD WIDTH="38%" VALIGN="TOP" HEIGHT=21>
<P ALIGN="CENTER"><FONT FACE="Times New Roman">Концентрация</FONT></TD>
<TD WIDTH="32%" VALIGN="TOP" HEIGHT=21>
<FONT FACE="Times New Roman"><P ALIGN="CENTER">Определена</FONT></TD>
<TD WIDTH="30%" VALIGN="TOP" HEIGHT=21>
<FONT FACE="Times New Roman"><P ALIGN="CENTER">более 70%</FONT></TD>
</TR>
</TABLE>
<FONT FACE="Times New Roman"><P>Анализ значений переменной "Концентрация" в условной части второго правила и</FONT><I> </I><FONT FACE="Times New Roman">в расширенном списке переменных условия и далее на группе фактов показывает, что условие 2, а следовательно, и все правило 2 не выполняется. При этом из стека логических выводов исключается верхняя строка. Теперь правилом, требующим дальнейшего рассмотрения, является правило 1 (согласно стеку).</P>
<P>7. Анализ правила 1 показывает, что оно выполняется. При этом значение переменной "Среда" в расширенном списке переменных условия изменяется на:</P>
<P>Таблица 25 Изменения в расширенном списке (шаг 7)</P></FONT>
<TABLE BORDER CELLSPACING=1 CELLPADDING=7 WIDTH=368>
<TR><TD WIDTH="26%" VALIGN="TOP" HEIGHT=15>
<P ALIGN="CENTER"><FONT FACE="Times New Roman">Среда</FONT></TD>
<TD WIDTH="37%" VALIGN="TOP" HEIGHT=15>
<FONT FACE="Times New Roman"><P ALIGN="CENTER">Определена</FONT></TD>
<TD WIDTH="38%" VALIGN="TOP" HEIGHT=15>
<FONT FACE="Times New Roman"><P ALIGN="CENTER">конц-ая кислота</FONT></TD>
</TR>
</TABLE>
<P ALIGN="RIGHT">&#9;&#9;</P>
<FONT FACE="Times New Roman"><P>А в базу знаний добавляется временный факт:</P>
<P>Сернистая кислота = концентрированная кислота После этого исключаем из стека строку, содержащую правило</P>
<P>8. Продолжается рассмотрение первого условия правила 5. Анализ показывает, что оно выполняется (с помощью группы фактов устанавливается соответствие между "концентрированной кислотой" из расширенного списка и "агрессивной жидкостью" из условной части правила). При этом в расширенном списке переменных условия переменной "Футеровка" присваивается значение "Есть" (табл. 26).</P>
<P>Таблица 26 Изменения в расширенном списке (шаг 8)</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=1 CELLPADDING=7 WIDTH=342>
<TR><TD WIDTH="28%" VALIGN="TOP" HEIGHT=20>
<P><FONT FACE="Times New Roman">Футеровка</FONT></TD>
<TD WIDTH="38%" VALIGN="TOP" HEIGHT=20>
<FONT FACE="Times New Roman"><P>Определена</FONT></TD>
<TD WIDTH="34%" VALIGN="TOP" HEIGHT=20>
<FONT FACE="Times New Roman"><P>Есть</FONT></TD>
</TR>
</TABLE>
</CENTER></P>
<FONT FACE="Times New Roman"><P>Правило 5 так же исключается из стека к система переходит к анализу правила 6. Анализ этого правила показывает, что первое условие выполняется ("Футеровка" = "есть"); переменной условия 2 правила 6 является переменная "Среда". Так же с помощью группы фактов устанавливается соответствие между "концентрированной кислотой" из расширенного списка и "сернистой кислотой" из условной части правила. Условие выполняется, следовательно, выполняется и</FONT> <FONT FACE="Times New Roman">все правило. Согласно этому правилу:</P>
<P>Материал футеровки = свинец.</P>
<P>Ответ на поставленный вопрос получен и система завершает свою работу.</P>
<P>Вообще говоря, работа системы завершается в двух случаях:</P>
<P>а) Проинициализирована переменная вывода, значение которой требовалось определить. В этом случае система сработала корректно, значение переменной есть результат работы.</P>
<P>б) Переменная не проинициализирована. и при очередном обращении к стеку логических выводов выявляется, что он пуст. В этом случае результата достичь не удалось, выдается сообщение об ошибке.</P>
<P>Отличие в алгоритме работы с базой знаний при обратной цепочке рассуждений по сравнению с алгоритмом при прямой цепочке рассуждений состоит, прежде всего, в том, что при прямой цепочке анализ выполняется от переменных условия к переменным вывода; в обратной же все иначе - от переменных вывода к переменным условия. В соответствии с этим несколько изменяется и структура данных базы знаний.</P>
<B><P>Порядок выполнения работы</P>
</B><P>1. Провести анализ правил базы знаний и логической структуры алгоритма.</P>
<P>2. Подготовить программу экспертной системы <I>к</I> файлы базы знаний.</P>
<P>3 Протестировать работу экспертной системы на контрольном</P>
<P>примере <A NAME="таб27"></FONT><A HREF="Tab/Tab27.htm"><B><FONT FACE="Times New Roman">из табл. 27.</B></FONT></A></A></P>
<B><FONT FACE="Times New Roman"><P>Содержание отчета</P>
</B><P>1. Текст программы, реализующей алгоритм обратной цепочки рассуждений .</P>
<P>2. Описание программы.</P>
<P>3. Описание алгоритма.</P>
<P>4. Текст файлов базы знаний.</P>
<P>5. Результаты работы алгоритма.</P></FONT></BODY>
</HTML>
