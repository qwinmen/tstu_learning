<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAQAEAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAA////AAAchAAqNVsANztTAEA6WAA3O14AAB2BACUyaABtVYwAdFuSAENYfAA+QXcAKzVqAAAc
        gAAyOGUAa1WKAFdijQBNSYgAQkNnAEA8YQBBPV8AMzp+AEJBXQBKQ2kAPkJhADg+ZAAQiL8AO8TMAECe
        vwBCQ4EAP1mxAD20xQBAy8wAP8jMADXa4gA/5+kAQbbYAD9CggA+X8MAbMvfAEnr5wA+4+MAQ+HeAD/f
        4gA9rtIAQXy7AEpuuwB0y9YAQeHgADne4gA9utcAE2efAEFDhwBEPa4ARUO6AD9AvwATZKAAkHdZAMCB
        YwC4iG8AG7fMABG71ACviXEAtHxjAMSHZwD25toA8tCzAL2PdQC5im4A7sOeAO7AlgDHiksACmGcABBn
        ngDC1OMA+/3/AP3//wD98+wA8smmAO7JpADyy6YAwbGgAApnnQAAXqEAAFicACrD0gAJYbIA1dXkAP34
        8wDuzq4A7cijAPXNpADVtqIADFuuACzH1QACXp4AAFmhAACb0QAUWZ8A1LShAPjRqgDvyqcA8MuoAPbQ
        qgDdvKQAGlicAACbzwAAXaIAKWeKAClQiwCod04A6biHAObAmgDmvJYA5r2WAOa/mQDouowAsXxMACBP
        kAAgZ5IAx4I8AMB1LwC+dTAAwXcwAMJ+MADAdzAAvnYwAMB4MgDFeTAAv2QAALNfAACvcwAAt2QAAMBl
        AADAiE4AvoUPAH1kAgDAhgIAS4rHAJxhCgCeZxAA49TCAP/9+wD///0A7PP9AKbJ8gCkye4ApsvyAKCx
        wQCdZwoAoV4AAJxYAADSwyoAsmEJAOTV1QDz+P0Ars7uAKPI7QCkzfUAorbVAK5bDADVxywAnl4CAKFZ
        AADRmwAAn1kUAKG01ACq0fgAp8rvAKjL8ACq0PYApLzdAJxYGgDPmwAAol0AAIpnKQCLUCkATneoAIe4
        6QCawOYAlrzmAJa95gCZv+YAjLroAEx8sQCQTyAAkmcgADyCxwAvdcAAKAMAAO8BAAAAAAAA////AIQc
        AABYNCgAUDg0AFg4QABcODQAgBwAAGgwJACMVGwAkFh0AHxYQAB0QDwAaDQoAGQ4MACIVGgAjGBUAIhI
        TABkQEAAYDxAAFw8QAB8ODAAXEBAAGhASABgQDwAZDw4ALyIEADMxDgAvJxAAIBAQACwWDwAxLQ8AMzI
        QADMyDwA4Ng0AOjkPADYtEAAgEA8AMBcPADcyGwA5OhIAODgPADc4EAA4Nw8ANCsPAC4fEAAuGxIANTI
        dADg4EAA4Nw4ANS4PACcZBAAhEBAAKw8RAC4QEQAvEA8AKBkEABYdJAAYIDAAGyIuADMtBgA1LgQAHCI
        rABgfLQAAAAAh4iJAAAAigAAAAAAAAAAAACCg4SFgoYAAAAAAAAAAHl6e3x9fnt/gIEAAAAAAG1ub3Bx
        cnN0dXZ3eAAAAABhYmNkZWZnaGlqa2wAAAAAVVZXWFlaW1xdXl9gAAAAAElKS0xNTk9QUVJTVAAAAAAA
        AEFCQ0RFRkdIAAAAAAAAADk6Ozw9Pj9AAAAAAAAAAAAALi8wMTIzNDU2NzgAAAAAACcoKSorLC0mAAAA
        AAAAAAAfICEiIyQlJgAAAAAAAAAAFxgZGhscHR4AAAAAAAAAAA8QERITFBUWAAAAAAAAAAAHCAkKCwwN
        DgAAAAAAAAAAAAIDBAUGBwAAAAAAAOO/AADwPwAAwA8AAIAHAACABwAAgAcAAIAHAADgHwAAwD8AAOAD
        AADgHwAA4B8AAOAfAADgHwAA4B8AAPA/AAA=
</value>
  </data>
</root>